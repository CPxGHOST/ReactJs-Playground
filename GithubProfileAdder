// LIVE CODE AVAILABLE ON https://jscomplete.com/playground/s761771

const testData = [
			{name: "Dan Abramov", avatar_url: "https://avatars0.githubusercontent.com/u/810438?v=4", company: "@facebook"},
      {name: "Sophie Alpert", avatar_url: "https://avatars2.githubusercontent.com/u/6820?v=4", company: "Humu"},
  		{name: "Sebastian MarkbÃ¥ge", avatar_url: "https://avatars2.githubusercontent.com/u/63648?v=4", company: "Facebook"},];

class App extends React.Component{
  state = {
    profiles: testData,
  }
  
  addNewProfile = (profileData) => {
     testData.push(profileData);
     this.setState({profiles: testData});
  }
  
  render(){
    return (
        <div className= 'container'>
          <Header title="The Github Cards App" />
          <Form  onSubmit = {this.addNewProfile}/>
          <CardList profiles = {this.state.profiles}/>
        </div>
    );
  }
}

class Header extends React.Component{
  render(){
    return (
      <div className="header"><h4>{this.props.title}</h4></div>
    );
  }
}

const CardList = (props) => {
  const profile = testData[0];
  return (
      <div>
      {props.profiles.map(profile => <Card  {...profile} />)}
      </div>
  );
}

class Form extends React.Component{
  state = {
    userName: ''
  };
  
  const handleSubmit = async(event) => {
    event.preventDefault();
    const res = await axios.get(`https://api.github.com/users/${this.state.userName}`);
    const newUser = {
      name: res.data.name,
      avatar_url: res.data.avatar_url,
      company: res.data.company
    };
    this.props.onSubmit(newUser);
    this.setState({userName: ''});
    
  }
  
  render(){
    return (
        <form action="" onSubmit = {this.handleSubmit}>
          <input
            type= "text"
            placeholder="Enter Github Profile" 
            value = {this.state.userName}
            onChange = {event => this.setState({userName: event.target.value})}
            
            required />
          <button>Add User</button>
        </form>
    );
  }
}

class Card extends React.Component{
  render(){
    return (
        <div className= 'card-container'>
              <div className = 'img-container'>
                  <img src={this.props.avatar_url} alt="" style={{height: 75, width:75 }} />
              </div>
              <div className = 'text-container'>
                      <h5 className = "name" style = {{fontWeight: 800}}>{this.props.name}</h5>
                    <h6 className = "company">{this.props.company}</h6>
              </div>
        </div>
    );
  }
}

ReactDOM.render(
  <App/>,
  document.getElementById('mountNode')
);
